---
title: "Float"
layout: post
date: 2018-08-17 0:00
img: windows.jpg
headerImage: True
tag: [Computer, Learning]
category: blog
author: ykx
description: Learn more about 'float'.
---

Float数据类型

https://msdn.microsoft.com/zh-cn/library/hd7199ke.aspx?f=255&MSPPError=-2147217396

浮点类型的单精度值具有 4 个字节，包括 1 个符号位， 1 个 8 位 excess-127 二进制指数和一个 23 位尾数

尾数表示一个介于 1.0 和 2.0 之间的数。由于尾数的高顺序位始终为 1 ，因此它不是以数字形式存储的。此表示形式为 float 类型提供了一个大约在 -3.4E+38 和 3.4E+38 之间的范围。

|	类型	|	有效位	|	字节数	| 	指数长度	|	尾数长度	|
|-----------|-----------|-----------|---------------|---------------|
|	float 	|	6 - 7	|	4		|	8位			|	23位		|
|	double	|	15 - 16	|	8		|	11位		|	52位		|

由于指数是以无符号形式存储的，因此指数的偏差为其可能值的一半。对 float 类型偏差为 127 ，对 double 类型偏差为 1023 ；

存储为二进制分数的尾数大于或等于 1 且小于 2。 对于 float 和 double 类型，最高有效位位置的尾数中有一个隐含的前导 1，这样，尾数实际上分别为 24 和 53 位长，即使最高有效位从未存储在内存中也是如此；

浮点包可以将二进制浮点数存储为非标准化数，而不使用刚刚介绍的存储方法。“非标准化数”是带有保留指数值的非零浮点数，其中尾数的最高有效位为 0。 通过使用非标准化格式，浮点数的范围可以扩展，但会失去精度。 您无法控制浮点数以标准化形式还是非标准化形式表示；浮点包决定了表示形式。 浮点包从不使用非标准化形式，除非指数变为小于可以标准化形式表示的最小值；

下表显示了可在每种浮点类型的变量中存储的最小值和最大值。 此表中所列的值仅适用于标准化浮点数；非标准化浮点数的最小值更小。 请注意，在 80x87 寄存器中保留的数字始终以 80 位标准化形式表示；数字存储在 32 位或 64 位浮点变量（float 类型和 long 类型的变量）中时只能以非标准化形式表示。

|	类型 	|	最小值	|	最大值	|
|-----------|-----------|-----------|
|	float 	|	1.175494351 E – 38	|	3.402823466 E + 38	|
|	double	|	2.2250738585072014 E – 308	|	1.7976931348623158 E + 308	|

如果存储比精度更重要，请考虑对浮点变量使用 float 类型。 相反，如果精度是最重要的条件，则使用 double 类型。
浮点变量可以提升为更大基数的类型（从 float 类型到 double 类型）。 当您对浮点变量执行算术时，通常会出现提升。 此算术始终以与具有最高精度的变量一样高的精度执行


https://msdn.microsoft.com/zh-cn/library/dsyxx40f.aspx
